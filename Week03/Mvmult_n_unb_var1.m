function [y_out] = Mvmult_n_unb_var1(A, x, y)
%MVMULT_N_UNB_VAR1

% This methods performs axpy (Ax + y) calculation.
% Note: A is matrix, x and y are vectors.

% UT Austin Linear Algebra - Foundations to Frontiers
% LAFF Homework 3.4.1.1
% Date: 11/22/2020
% Created by: Logan Kells

% NOTE: The following code was created using the SPARK code generator.
% http://edx-org-utaustinx.s3.amazonaws.com/UT501x/Spark/index.html

% NOTE: Visualize this algorithm using the online PictureFLAME GUI.
% http://edx-org-utaustinx.s3.amazonaws.com/UT501x/PictureFLAME/PictureFLAME.html


[ AT, ...
  AB ] = FLA_Part_2x1( A, ...
                         0, 'FLA_TOP' );
[ xT, ...
  xB ] = FLA_Part_2x1( x, ...
                         0, 'FLA_TOP' );
[ yT, ...
  yB ] = FLA_Part_2x1( y, ...
                         0, 'FLA_TOP' );

  while ( size( AT, 1 ) < size( A, 1 ) )

    [ A0, ...
      a1t, ...
      A2 ] = FLA_Repart_2x1_to_3x1( AT, ...
                                    AB, ...
                                    1, 'FLA_BOTTOM' );

    [ x0, ...
      chi1, ...
      x2 ] = FLA_Repart_2x1_to_3x1( xT, ...
                                    xB, ...
                                    1, 'FLA_BOTTOM' );

    [ y0, ...
      psi1, ...
      y2 ] = FLA_Repart_2x1_to_3x1( yT, ...
                                    yB, ...
                                    1, 'FLA_BOTTOM' );

    %------------------------------------------------------------%

    % Calculate y = Ax + y
    % NOTE: a1t is a row vector. x is a column vector. psi1 is a scalar.
    
    psi1 = laff_dot(a1t, x) + psi1;

    %------------------------------------------------------------%

    [ AT, ...
      AB ] = FLA_Cont_with_3x1_to_2x1( A0, ...
                                       a1t, ...
                                       A2, ...
                                       'FLA_TOP' );

    [ xT, ...
      xB ] = FLA_Cont_with_3x1_to_2x1( x0, ...
                                       chi1, ...
                                       x2, ...
                                       'FLA_TOP' );

    [ yT, ...
      yB ] = FLA_Cont_with_3x1_to_2x1( y0, ...
                                       psi1, ...
                                       y2, ...
                                       'FLA_TOP' );

  end

  y_out = [ yT
            yB ];

return


end

